/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-05-04 04:47:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cs336.pkg.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;
import java.sql.*;
import java.util.ArrayList;

public final class Questions_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("com.cs336.pkg");
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Staff Question Answering System</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        .question-container {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            background-color: #f9f9f9;\r\n");
      out.write("        }\r\n");
      out.write("        label {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("        textarea {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            resize: vertical;\r\n");
      out.write("        }\r\n");
      out.write("        input[type=\"submit\"] {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        input[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("        hr {\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-top: 1px solid #ccc;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .back-button {\r\n");
      out.write("		    display: block;\r\n");
      out.write("		    margin-top: 20px;\r\n");
      out.write("		    text-align: center;\r\n");
      out.write("		    text-decoration: none;\r\n");
      out.write("		    padding: 10px 20px;\r\n");
      out.write("		    background-color: #007bff;\r\n");
      out.write("		    color: #fff;\r\n");
      out.write("		    border: none;\r\n");
      out.write("		    border-radius: 5px;\r\n");
      out.write("		    cursor: pointer;\r\n");
      out.write("		    transition: background-color 0.3s;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.back-button:hover {\r\n");
      out.write("		    background-color: #0056b3;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Staff Question Answering System</h1>\r\n");
      out.write("        \r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");
 
            Connection connection = null;
            Statement stmt = null;
            ResultSet rs = null;
            
            try {
                String username = request.getParameter("username");
                String password = request.getParameter("password");
                
                // Validate username and password
                ApplicationDB db = new ApplicationDB();
                connection = db.getConnection();
                
                
                stmt = connection.createStatement();
                rs = stmt.executeQuery("SELECT q.question_id, q.body, a.answer_body FROM Question q left join Answers a on a.question_id = q.question_id");
                
                // Display questions and form for each question
                while (rs.next()) {
                    String questionId = rs.getString("question_id");
                    String questionBody = rs.getString("body");
                    
                    String answerBody = "";
                    
                    if(rs.getString("answer_body") != null){
                    	answerBody = rs.getString("answer_body");
                    }
          
                    
                    if(answerBody.equals("")){
                    	
                    
        
      out.write("\r\n");
      out.write("                    \r\n");
      out.write("                   \r\n");
      out.write("                    <div class=\"question-container\">\r\n");
      out.write("                        <p><strong>Question:</strong> ");
      out.print( questionBody );
      out.write("</p>\r\n");
      out.write("                        <form id=\"form_");
      out.print( questionId );
      out.write("\" method=\"post\" action=\"submitAnswer.jsp\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"question_id\" value=\"");
      out.print( questionId );
      out.write("\" />\r\n");
      out.write("                            <input type=\"hidden\" name=\"answer_body\" id=\"answer_body_");
      out.print( questionId );
      out.write("\" />\r\n");
      out.write("                            <label for=\"answer_");
      out.print( questionId );
      out.write("\">Your Answer:</label>\r\n");
      out.write("                            <textarea id=\"answer_");
      out.print( questionId );
      out.write("\" name=\"answer\" rows=\"4\" cols=\"50\"></textarea>\r\n");
      out.write("                            <br>\r\n");
      out.write("                            <input type=\"submit\" value=\"Submit Answer\" onclick=\"prepareAnswer('");
      out.print( questionId );
      out.write("')\" />\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <hr>\r\n");
      out.write("        ");
 
        	
                    }
                    
                    else{
                    	
      out.write("	\r\n");
      out.write("                    	\r\n");
      out.write("                    	<div class=\"question-container\">\r\n");
      out.write("                        <p><strong>Question:</strong> ");
      out.print( questionBody );
      out.write("</p>\r\n");
      out.write("                        <p><strong>Answer:</strong> ");
      out.print( answerBody );
      out.write("</p>\r\n");
      out.write("                        \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <hr>\r\n");
      out.write("                    \r\n");
      out.write("                    	");
 
                    
                    }
                    
                    
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try { if (rs != null) rs.close(); } catch (Exception e) { e.printStackTrace(); }
                try { if (stmt != null) stmt.close(); } catch (Exception e) { e.printStackTrace(); }
                try { if (connection != null) connection.close(); } catch (Exception e) { e.printStackTrace(); }
            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<a href=\"StaffMode.jsp\" class=\"back-button\">Back to Staff Mode</a>\r\n");
      out.write("		\r\n");
      out.write("        <script>\r\n");
      out.write("            function prepareAnswer(questionId) {\r\n");
      out.write("                var answerTextArea = document.getElementById('answer_' + questionId);\r\n");
      out.write("                var answerBodyInput = document.getElementById('answer_body_' + questionId);\r\n");
      out.write("                answerBodyInput.value = answerTextArea.value;\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
