/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-05-04 04:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cs336.pkg.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class AdminManageUsers_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("com.cs336.pkg");
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("    /* Add styles for the popup form and overlay */\r\n");
      out.write("    .overlay {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        display: none;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        top: 0;\r\n");
      out.write("        left: 0;\r\n");
      out.write("        right: 0;\r\n");
      out.write("        bottom: 0;\r\n");
      out.write("        background-color: rgba(0,0,0,0.5);\r\n");
      out.write("        z-index: 2;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .user-form-popup {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 50%;\r\n");
      out.write("        left: 50%;\r\n");
      out.write("        transform: translate(-50%, -50%);\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        width: 300px;\r\n");
      out.write("        z-index: 9;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Add styles for the close button */\r\n");
      out.write("    .close-btn {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        right: 10px;\r\n");
      out.write("        top: 10px;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("    function deleteUser(userId) {\r\n");
      out.write("        if (confirm('Are you sure you want to delete this user?')) {\r\n");
      out.write("            window.location.href = 'AdminDeleteUser.jsp?userId=' + userId;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function editUser(userId, username, password, permissions) {\r\n");
      out.write("        document.getElementById('editFormOverlay').style.display='block';\r\n");
      out.write("        document.getElementById('editUsername').value = username;\r\n");
      out.write("        document.getElementById('editPassword').value = password;\r\n");
      out.write("        document.getElementById('editUserId').value = userId;\r\n");
      out.write("        document.getElementById('editPermissions').value = permissions;\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <button onclick=\"window.location.href='AdminMode.jsp'\">Back to Main Menu</button> <!-- Add this line -->\r\n");
      out.write("\r\n");
      out.write("	<button onclick=\"document.getElementById('userFormOverlay').style.display='block'\">Add User</button>\r\n");
      out.write("	\r\n");
      out.write("    <div id=\"userFormOverlay\" class=\"overlay\" onclick=\"if (event.target == this) this.style.display='none'\">\r\n");
      out.write("        <div class=\"user-form-popup\">\r\n");
      out.write("            <span class=\"close-btn\" onclick=\"document.getElementById('userFormOverlay').style.display='none'\">×</span>\r\n");
      out.write("            <form action=\"AdminAddUser.jsp\" method=\"post\">\r\n");
      out.write("                <label for=\"username\">Username:</label><br>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" required><br>\r\n");
      out.write("                <label for=\"password\">Password:</label><br>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" required><br>\r\n");
      out.write("                <label for=\"permissions\">Permissions:</label><br>\r\n");
      out.write("                <select id=\"permissions\" name=\"permissions\" required>\r\n");
      out.write("                    <option value=\"0\">0</option>\r\n");
      out.write("                    <option value=\"1\">1</option>\r\n");
      out.write("                </select><br>\r\n");
      out.write("                <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"editFormOverlay\" class=\"overlay\" onclick=\"if (event.target == this) this.style.display='none'\">\r\n");
      out.write("	    <div class=\"user-form-popup\">\r\n");
      out.write("	        <span class=\"close-btn\" onclick=\"document.getElementById('editFormOverlay').style.display='none'\">×</span>\r\n");
      out.write("	        <form action=\"AdminEditUser.jsp\" method=\"post\">\r\n");
      out.write("	            <input type=\"hidden\" id=\"editUserId\" name=\"userId\">\r\n");
      out.write("	            <label for=\"editUsername\">Username:</label><br>\r\n");
      out.write("	            <input type=\"text\" id=\"editUsername\" name=\"username\" required><br>\r\n");
      out.write("	            <label for=\"editPassword\">Password:</label><br>\r\n");
      out.write("	            <input type=\"text\" id=\"editPassword\" name=\"password\" required><br> <!-- Change type to \"text\" -->\r\n");
      out.write("	            <label for=\"editPermissions\">Permissions:</label><br>\r\n");
      out.write("	            <select id=\"editPermissions\" name=\"permissions\" required>\r\n");
      out.write("	                <option value=\"0\">0</option>\r\n");
      out.write("	                <option value=\"1\">1</option>\r\n");
      out.write("	            </select><br>\r\n");
      out.write("	            <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("	        </form>\r\n");
      out.write("	    </div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>User ID</th>\r\n");
      out.write("            <th>Username</th>\r\n");
      out.write("            <th>Action</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
 try {
            // Get the database connection
            ApplicationDB db = new ApplicationDB();
            Connection con = db.getConnection();

            // Construct the base SQL query
            String baseQuery = "SELECT user_id, username, password, permissions FROM users WHERE username != 'Admin'";

            PreparedStatement ps = con.prepareStatement(baseQuery);
            
            ResultSet result = ps.executeQuery();
            

            while (result.next()) { 
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( result.getString("user_id") );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( result.getString("username") );
      out.write("</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <button onclick=\"editUser('");
      out.print( result.getString("user_id") );
      out.write("', '");
      out.print( result.getString("username") );
      out.write("', '");
      out.print( result.getString("password") );
      out.write("', '");
      out.print( result.getInt("permissions") );
      out.write("')\">Edit User</button>\r\n");
      out.write("                        <button onclick=\"deleteUser('");
      out.print( result.getString("user_id") );
      out.write("')\">Delete User</button>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            ");
 }
            // Close the connection.
            db.closeConnection(con);
        } catch (Exception e) {
            out.print(e);
        } 
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
